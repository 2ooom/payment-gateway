{
  "x-generator": "NSwag v13.2.2.0 (NJsonSchema v10.1.4.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Payment Gateway",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Fetch all the all payment details including: acquiring bank id, amount, currency, payment status,\nmasked card number and expiry.",
        "operationId": "Payments_GetPayments",
        "responses": {
          "200": {
            "description": "List of payment details including: amount, currency, payment status, masked card number and expiry\nPayment Status meaning:\n  Pending = 0\n  Accepted = 1\n  Refused = 2",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "nullable": true,
                  "xml": {
                    "name": "ArrayOfPayment",
                    "wrapped": true
                  },
                  "items": {
                    "xml": {
                      "name": "Payment"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Payment"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Submit new payment",
        "operationId": "Payments_PostPayment",
        "requestBody": {
          "x-name": "request",
          "description": "Payment full details including card number and details (expiry, cvv, cardholder name)",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Payment details including: acquiring bank id, amount, currency, payment status,\nmasked card number and expiry.\nPayment Status meaning:\n  Pending = 0\n  Accepted = 1\n  Refused = 2",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/Payments/{id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Fetch specific payment submitted by current merchant (merchantId is taken from JWT token)",
        "operationId": "Payments_GetPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Payment Id",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details including: acquiring bank id, amount, currency, payment status,\nmasked card number and expiry.\nPayment Status meaning:\n  Pending = 0\n  Accepted = 1\n  Refused = 2",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/Merchants": {
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Create/register new merchant. Access to Payment HTTP API is only possible after authentication",
        "operationId": "Merchants_CreateMerchant",
        "requestBody": {
          "x-name": "request",
          "description": "Details about new merchant including login and password",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MerchantCreationRequest"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "In case of success new Merchant Id",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MerchantCreationResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/Merchants/authenticate": {
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Authenticates merchant using login/password by providing JWT self-contained token",
        "operationId": "Merchants_Authenticate",
        "requestBody": {
          "x-name": "request",
          "description": "Merchant's login and password",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationRequest"
                  }
                ]
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "1/ JWT Bearer token to be provided in Authorization HTTP header like so:\n     Authorization: Bearer {JwtToken}\n2/ Expiry DateTime. After that point token will not be valid and client has to repeat\n   authentication process. By Default valid for 7 days.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AuthenticationResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Payment": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Amount",
          "Currency",
          "ExpiryMonth",
          "ExpiryYear",
          "CardLastDigits",
          "CardNumberHashed",
          "CardNumberLength",
          "Status",
          "CreatedUtc",
          "MerchantId"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1
          },
          "ExpiryMonth": {
            "type": "integer",
            "format": "byte",
            "maximum": 12.0,
            "minimum": 1.0
          },
          "ExpiryYear": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 2020.0
          },
          "CardLastDigits": {
            "type": "string",
            "minLength": 1
          },
          "CardNumberHashed": {
            "type": "string",
            "minLength": 1
          },
          "CardNumberLength": {
            "type": "integer",
            "format": "byte"
          },
          "Status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "CreatedUtc": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "MerchantId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PaymentStatus": {
        "type": "integer",
        "description": "0 = Pending\n1 = Accepted\n2 = Refused",
        "x-enumNames": [
          "Pending",
          "Accepted",
          "Refused"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "PaymentResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "MaskedCardNumber": {
            "type": "string",
            "nullable": true
          },
          "ExpiryMonth": {
            "type": "integer",
            "format": "byte"
          },
          "ExpiryYear": {
            "type": "integer"
          },
          "Status": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "CardNumber",
          "ExpiryMonth",
          "ExpiryYear",
          "Cvv",
          "CardHolderName",
          "Amount",
          "Currency"
        ],
        "properties": {
          "CardNumber": {
            "type": "string",
            "minLength": 1
          },
          "ExpiryMonth": {
            "type": "integer",
            "format": "byte",
            "maximum": 12.0,
            "minimum": 1.0
          },
          "ExpiryYear": {
            "type": "integer",
            "maximum": 2147483647.0,
            "minimum": 2020.0
          },
          "Cvv": {
            "type": "string",
            "minLength": 1
          },
          "CardHolderName": {
            "type": "string",
            "minLength": 1
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1
          }
        }
      },
      "MerchantCreationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MerchantCreationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Name",
          "Login",
          "Password",
          "AcquirerType"
        ],
        "properties": {
          "Name": {
            "type": "string",
            "minLength": 1
          },
          "Url": {
            "type": "string",
            "nullable": true
          },
          "Login": {
            "type": "string",
            "minLength": 1
          },
          "Password": {
            "type": "string",
            "minLength": 1
          },
          "AcquirerType": {
            "$ref": "#/components/schemas/AcquirerType"
          }
        }
      },
      "AcquirerType": {
        "type": "integer",
        "description": "0 = Visa\n1 = MasterCard\n2 = AmericanExpress",
        "x-enumNames": [
          "Visa",
          "MasterCard",
          "AmericanExpress"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "AuthenticationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "JwtToken": {
            "type": "string",
            "nullable": true
          },
          "Expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "Login",
          "Password"
        ],
        "properties": {
          "Login": {
            "type": "string",
            "minLength": 1
          },
          "Password": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    }
  }
}